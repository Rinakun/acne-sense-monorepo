<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"
    />
    <title>AcneSense - Hasil Deteksi</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Manrope:wght@700;800&family=Maven+Pro:wght@500&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <link rel="manifest" href="/manifest.json" />

    <style>
      body,
      html {
        overscroll-behavior: none;
        -webkit-overflow-scrolling: touch;
        margin: 0;
        padding: 0;
        font-family: "Manrope", sans-serif;
      }
      .header-font {
        font-family: "poppins", sans-serif;
        font-weight: 800;
        font-size: 24px;
      }
      .header-desktop-font {
        font-family: "poppins", sans-serif;
        font-weight: 600;
        font-size: 24px;
      }
      .title-font {
        font-weight: 800;
        font-size: 1.75rem; /* 28px approx */
        user-select: none;
      }
      .accent-green {
        color: #40c057;
      }
      .sub-title-font {
        font-family: "Maven Pro", sans-serif;
        font-weight: 500;
        font-size: 0.875rem; /* 14px */
        user-select: none;
      }
      .icon-style {
        font-size: 1.25rem;
      }
      /* Rounded corner style for each button (similar radius on top-left) */
      .btn-rounded {
        border-top-left-radius: 1rem;
      }

      /* Custom scrollbar for desktop version */
      .custom-scrollbar::-webkit-scrollbar {
        width: 8px;
      }
      .custom-scrollbar::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 4px;
      }
      .custom-scrollbar::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 4px;
      }
      .custom-scrollbar::-webkit-scrollbar-thumb:hover {
        background: #a8a8a8;
      }

      /* Image navigation styles */
      .image-navigation {
        position: absolute;
        top: 50%;
        left: 0;
        right: 0;
        display: flex;
        justify-content: space-between;
        transform: translateY(-50%);
        pointer-events: none;
      }
      .image-nav-btn {
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        padding: 10px;
        border-radius: 50%;
        pointer-events: auto;
        transition: background-color 0.3s;
      }
      .image-nav-btn:hover {
        background-color: rgba(0, 0, 0, 0.7);
      }

      /* Enhanced Detection and Classification Label Styles */
      .detection-label-container {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 1rem;
      }

      .detection-label-wrapper {
        position: relative;
        display: inline-block;
        padding: 0.5rem 1.5rem;
        background-color: #2c5e5f;
        color: white;
        border-radius: 9999px; /* Full rounded */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
      }

      .detection-label-wrapper::before {
        content: '';
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        background: linear-gradient(45deg, rgba(44, 94, 95, 0.3), transparent);
        border-radius: 9999px;
        z-index: -1;
        opacity: 0.7;
      }

      .detection-label-wrapper:hover {
        transform: scale(1.05);
        background-color: #40837f;
      }

      .classification-counter {
        background-color: #ff8a65;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        margin-left: 1rem;
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
      }

      .markdown-content strong {
        color: #E3734F; /* Aturan untuk mengubah warna teks tebal menjadi hitam */
      }

      /* Desktop specific styles */
      @media (min-width: 768px) {
        .desktop-container {
          max-height: 85vh;
          height: 85vh;
        }
        .desktop-right-panel {
          display: flex;
          flex-direction: column;
          height: 100%;
        }
        .desktop-right-content {
          flex: 1;
          overflow-y: auto;
          min-height: 0;
        }
        .desktop-left-panel {
          overflow-y: auto;
          max-height: 100%;
        }
      }
    </style>
  </head>
  <body>
    <!-- Mobile Version -->
    <div class="block md:hidden h-screen bg-white relative flex flex-col">
      <header class="bg-[#E5F6E5] px-6 pt-6 pb-4 flex items-center justify-between">
        <div class="flex items-center">
          <button aria-label="Back" class="mr-5 text-black select-none">
            <i class="fa-solid fa-arrow-left" style="font-size: 24px; font-weight: 800; width: 20px"></i>
          </button>
          <h1 class="text-black header-font select-none">Hasil</h1>
        </div>
      </header>

      <main class="flex-1 p-6 bg-white overflow-y-auto">
        <div class="detection-label-container">
          <div class="detection-label-wrapper">Deteksi</div>
        </div>
        
        <div class="mb-6 relative">
          <img
            id="mobile-detection-image"
            src="<%= image_asli %>"
            alt="Acne Detection"
            class="w-full h-full object-cover rounded-lg mb-4"
          />
        </div>
        <hr class="border-t-2 border-dotted border-gray-300 my-4">
        
        <div class="flex justify-center items-center mb-4">
          <div class="detection-label-wrapper">Klasifikasi</div>
          <div id="mobile-image-counter" class="classification-counter">1/<%= jumlah_deteksi %></div>
        </div>
        
        <div class="mb-6 relative">
          <img
            id="mobile-classification-image"
            src="<%= image_klas[0] %>"
            alt="Acne Detection"
            class="w-full h-full object-cover rounded-lg mb-4"
          />
          <div class="image-navigation">
            <button id="mobile-prev-button" class="image-nav-btn ml-2">
              <i class="fas fa-chevron-left"></i>
            </button>
            <button id="mobile-next-button" class="image-nav-btn mr-2">
              <i class="fas fa-chevron-right"></i>
            </button>
          </div>
        </div>

        <!-- Rest of mobile content remains unchanged -->
        <div id="mobile-acne-details" class="space-y-4">
          <!-- isi konten ada di js -->
        </div>
      </main>
    </div>

    <!-- Desktop Version -->
    <div class="hidden md:flex w-full h-screen mx-auto bg-[#D6EBD5] rounded-2xl overflow-hidden">
      <div class="flex flex-1 items-center justify-center" style="margin: 0 20px">
        <div class="bg-white w-full max-w-7xl rounded-2xl p-5 flex desktop-container">
          <!-- Left Panel -->
  <%- include('templates/menu-desktop.ejs'); %>

          <!-- Right Panel -->
          <div class="w-2/3 desktop-right-panel rounded-r-2xl overflow-hidden">
            <header
              class="bg-[#6A9E61] p-6 flex items-center justify-between select-none flex-shrink-0"
            >
              <h2 class="header-desktop-font text-white">Hasil</h2>
              <div
                class="w-12 h-12 rounded-full border border-gray-300 flex items-center justify-center overflow-hidden bg-white"
              >
                <img
                  src="<%= user.foto_profile ? user.foto_profile : '/image/foto_profile/default.png' %>"
                  alt="avatar"
                  class="w-full h-full object-cover"
                />
              </div>
            </header>
            <!-- right panel -->
            <div class="desktop-right-content p-10 custom-scrollbar">
              <div class="detection-label-container">
                <div class="detection-label-wrapper text-2xl">Deteksi</div>
              </div>
              
              <div class="mb-8 relative">
                <img
                  id="desktop-detection-image"
                  src="<%= image_asli %>"
                  alt="Acne Detection"
                  class="w-full object-cover rounded-lg mb-6"
                />
              </div>
              <hr class="border-t-2 border-dotted border-gray-300 my-4">
              
              <div class="flex justify-center items-center mb-4">
                <div class="detection-label-wrapper text-2xl">Klasifikasi</div>
                <div id="desktop-image-counter" class="classification-counter text-xl">1/<%= jumlah_deteksi %></div>
              </div>
              
              <div class="mb-8 relative">
                <img
                  id="desktop-classification-image"
                  src="<%= image_klas %>"
                  alt="Acne Detection"
                  class="w-full object-cover rounded-lg mb-6"
                />
                <div class="image-navigation">
                  <button id="desktop-prev-button" class="image-nav-btn ml-2">
                    <i class="fas fa-chevron-left"></i>
                  </button>
                  <button id="desktop-next-button" class="image-nav-btn mr-2">
                    <i class="fas fa-chevron-right"></i>
                  </button>
                </div>
              </div>

              <!-- Rest of desktop content remains unchanged -->
              <div id="desktop-acne-details" class="space-y-6">
                <!-- isi konten ada di js -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script src="/scripts/pendaftaran-sw.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/15.0.7/marked.min.js" integrity="sha512-rPuOZPx/WHMHNx2RoALKwiCDiDrCo4ekUctyTYKzBo8NGA79NcTW2gfrbcCL2RYL7RdjX2v9zR0fKyI4U4kPew==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
// Objek utama untuk menyimpan data deteksi
const detectionData = <%- JSON.stringify({
      jumlah_deteksi: jumlah_deteksi,
      klas_deteksi: klas_deteksi,
      image_asli: image_asli,
      image_klas: image_klas,
      overview: overview,
      recommendations: recommendations,
      skincare_tips: skincare_tips,
      important_notes: important_notes
  }) %>;

// Fungsi untuk memperbarui konten deteksi
function updateDetectionContent(index, isMobile = false) {
  const prefix = isMobile ? '#mobile-' : '#desktop-';

  // Update gambar asli
  document.querySelector(`${prefix}detection-image`).src = detectionData.image_asli;

  // Update gambar klas
  const classificationImage = document.querySelector(`${prefix}classification-image`);
  if (index >= 0 && index < detectionData.image_klas.length) {
    classificationImage.src = detectionData.image_klas[index]; // Set gambar klas yang sesuai
  } else {
    classificationImage.src = ''; // Reset gambar jika tidak valid
  }

  // Update counter
  document.querySelector(`${prefix}image-counter`).textContent = 
    `${index + 1}/${detectionData.jumlah_deteksi}`;

  // Fungsi untuk menghapus header yang tidak diinginkan
  const removeHeaders = (markdownText) => {
    return markdownText
      .replace(/^## (OVERVIEW|RECOMMENDATIONS|SKINCARE TIPS|IMPORTANT NOTES)\n/gi, ''); // Menghapus header
  };

  // Update detail konten dengan rendering Markdown
  const detailContainer = document.querySelector(`${prefix}acne-details`);
  detailContainer.innerHTML = `
    <div class="bg-[#2C5E5F] text-white p-6 rounded-lg mb-4">
      <h1 class="font-bold text-xl mb-3 text-center">Overview</h1>
      <div class="markdown-content text-justify">
        ${marked.parse(removeHeaders(detectionData.overview))}
      </div>
    </div>
    <div class="bg-[#2C5E5F] text-white p-6 rounded-lg mb-4">
      <h2 class="font-bold text-xl mb-3 text-center">Rekomendasi</h2>
      <div class="markdown-content text-justify">
        ${marked.parse(removeHeaders(detectionData.recommendations))}
      </div>
    </div>
    <div class="bg-[#2C5E5F] text-white p-6 rounded-lg mb-4">
      <h2 class="font-bold text-xl mb-3 text-center">Skincare Tips</h2>
      <div class="markdown-content text-justify">
        ${marked.parse(removeHeaders(detectionData.skincare_tips))}
      </div>
    </div>
    <div class="bg-[#2C5E5F] text-white p-6 rounded-lg mb-4">
      <h2 class="font-bold text-xl mb-3 text-center">Catatan Penting</h2>
      <div class="markdown-content text-justify">
        ${marked.parse(removeHeaders(detectionData.important_notes))}
      </div>
    </div>
  `;
}

// Inisialisasi variabel untuk tracking
let currentMobileIndex = 0;
let currentDesktopIndex = 0;

// Fungsi untuk menangani navigasi
function setupNavigation() {
  const mobilePrevButton = document.querySelector('#mobile-prev-button');
  const mobileNextButton = document.querySelector('#mobile-next-button');

  // Navigasi untuk versi mobile
  mobilePrevButton.addEventListener('click', () => {
    currentMobileIndex = (currentMobileIndex - 1 + detectionData.jumlah_deteksi) % detectionData.jumlah_deteksi;
    updateDetectionContent(currentMobileIndex, true);
  });

  mobileNextButton.addEventListener('click', () => {
    currentMobileIndex = (currentMobileIndex + 1) % detectionData.jumlah_deteksi;
    updateDetectionContent(currentMobileIndex, true);
  });

  // Navigasi untuk versi desktop
  const desktopPrevButton = document.querySelector('#desktop-prev-button');
  const desktopNextButton = document.querySelector('#desktop-next-button');

  desktopPrevButton.addEventListener('click', () => {
    currentDesktopIndex = (currentDesktopIndex - 1 + detectionData.jumlah_deteksi) % detectionData.jumlah_deteksi;
    updateDetectionContent(currentDesktopIndex, false);
  });

  desktopNextButton.addEventListener('click', () => {
    currentDesktopIndex = (currentDesktopIndex + 1) % detectionData.jumlah_deteksi;
    updateDetectionContent(currentDesktopIndex, false);
  });
}

// Inisialisasi ketika dokumen selesai dimuat
document.addEventListener('DOMContentLoaded', () => {
    marked.setOptions({
      renderer: new marked.Renderer(),
      highlight: null,
      langPrefix: 'language-',
      headerIds: true,
      headerPrefix: '',
      breaks: false,
      gfm: true,
      pedantic: false,
      sanitize: false,
      smartypants: false,
      xhtml: false
    });

    setupNavigation();
    
    // Inisialisasi konten pertama untuk mobile dan desktop
    updateDetectionContent(currentMobileIndex, true);
    updateDetectionContent(currentDesktopIndex, false);
});
</script>
  </body>
</html>
