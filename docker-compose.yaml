name: acne-sense

services:
  acne-sense-api:
    image: acne-sense-api:latest
    build:
      context: ./api
      dockerfile: Dockerfile.dev
      args:
        - FLASK_PORT=${FLASK_PORT:-5000}
    ports:
      - "${FLASK_PORT:-5000}:${FLASK_PORT:-5000}"
    volumes:
      - ./api/data:/app/data
      - ./api/models:/app/models
      - ./api/service-account-key.json:/app/service-account-key.json:ro
    env_file:
      - ./api/.env
    # environment:
    #   - QDRANT_URL=http://qdrant:6333
    networks:
      - acne-sense-network
    restart: unless-stopped
    # depends_on:
    #   - qdrant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FLASK_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  acne-sense-web:
    image: acne-sense-web:latest
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./web/.env
    environment:
      - NODE_ENV=production
    networks:
      - acne-sense-network
    restart: unless-stopped
    depends_on:
      - acne-sense-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # qdrant:
  #   image: qdrant/qdrant:latest
  #   container_name: qdrant-main
  #   restart: unless-stopped
  #   ports:
  #     - "6333:6333"
  #     - "6334:6334"
  #   volumes:
  #     - ./qdrant_storage_main:/qdrant/storage
  #   networks:
  #     - acne-sense-network

networks:
  acne-sense-network:
    driver: bridge
